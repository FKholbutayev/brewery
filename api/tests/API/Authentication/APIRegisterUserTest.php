<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class APIRegisterUserTest extends TestCase
{
    use RefreshDatabase;

    private $endpoint;
    private $name;
    private $email;
    private $password;
    private $confirmPassword;

    public function setUp(): void
    {
       parent::setUp(); // TODO: Change the autogenerated stub
       $this->name = 'John Doe';
       $this->email = 'john.doe@invajo.com';
       $this->password = 'secretPassword';
       $this->confirmPassword = 'secretPassword';

       $this->endpoint = 'http://roastandbrew-api.521.test/register';
    }

    /** @test */

    public function a_guest_can_not_register_if_name_is_missing()
    {
       $response = $this->json('post', $this->endpoint, [
           'email' => $this->email,
           'password' => $this->password,
           'confirm_password' => $this->confirmPassword
       ]);

       $response->assertJsonValidationErrors([
           'name' => 'The name field is required',
       ]);
    }

    /** @test */

    public function a_guest_can_not_register_if_email_is_missing()
    {
        $response = $this->json('post', $this->endpoint, [
            'name' => $this->name,
            'password' => $this->password,
            'confirm_password' => $this->confirmPassword
        ]);

        $response->assertJsonValidationErrors([
            'email' => 'The email field is required',
        ]);
    }

    /** @test */

    public function a_guest_can_not_register_if_password_is_missing()
    {
        $response = $this->json('post', $this->endpoint, [
            'name' => $this->name,
            'email' => $this->email,
            'confirm_password' => $this->confirmPassword
        ]);

        $response->assertJsonValidationErrors([
            'password' => 'The password field is required',
        ]);
    }

    /** @test */

    public function a_guest_can_not_register_if_confirm_password_is_missing()
    {
        $response = $this->json('post', $this->endpoint, [
            'name' => $this->name,
            'email' => $this->email,
            'password' => $this->password
        ]);
        $response->assertJsonValidationErrors([
            'confirm_password' => 'The confirm password field is required',
        ]);
    }

    /** @test */

    public function a_guest_can_not_register_if_all_fields_are_missing()
    {
        $response = $this->json('post', $this->endpoint, []);
        $response->assertJsonValidationErrors([
            'name',
            'email',
            'password',
            'confirm_password',
        ]);
    }

    /** @test */

    public function a_guest_can_be_registered()
    {
        $response = $this->json('post', $this->endpoint, [
            'name' => $this->name,
            'email' => $this->email,
            'password' => $this->password,
            'confirm_password' => $this->confirmPassword,
        ]);

        $response->assertSuccessful();
    }
}
